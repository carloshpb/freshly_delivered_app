// Mocks generated by Mockito 5.4.2 from annotations
// in freshly_delivered_app/test/base_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:freshly_delivered_app/features/authentication/domain/models/app_user.dart'
    as _i5;
import 'package:freshly_delivered_app/features/authentication/domain/repositories/authentication_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

import 'base_mock.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Listener].
///
/// See the documentation for Mockito's code generation for more information.
class MockListener<T> extends _i1.Mock implements _i2.Listener<T> {
  @override
  void call(
    T? previous,
    T? next,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #call,
          [
            previous,
            next,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i3.AuthenticationRepository {
  @override
  _i4.Stream<_i5.AppUser?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i4.Stream<_i5.AppUser?>.empty(),
        returnValueForMissingStub: _i4.Stream<_i5.AppUser?>.empty(),
      ) as _i4.Stream<_i5.AppUser?>);
  @override
  _i4.Future<void> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> createUserWithEmailAndPassword(
    String? email,
    String? password,
    String? fullName,
    String? phoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [
            email,
            password,
            fullName,
            phoneNumber,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> sendPasswordResetEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [email],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> confirmPasswordReset(
    String? code,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [
            code,
            newPassword,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
